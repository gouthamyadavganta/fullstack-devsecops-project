name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-2
  TFSTATE_BUCKET: ${{ secrets.TFSTATE_BUCKET }}
  CHART_BUCKET: ${{ secrets.CHART_BUCKET }}

jobs:
  lint-and-test:
    name: Lint & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install & Test Server
        run: |
          cd server
          npm ci
          npm test

      - name: Install & Test Client
        run: |
          cd client
          npm ci
          npm test

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform fmt & validate
        run: |
          cd terraform-aws-infra
          terraform fmt -check
          terraform init -backend-config="bucket=${{ env.TFSTATE_BUCKET }}"
          terraform validate

      - name: Setup Helm
        uses: azure/setup-helm@v3

      - name: Helm lint
        run: helm lint fullstack-app

  build-and-push:
    name: Build & Push Docker Images
    needs: lint-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & Push Server Image
        uses: docker/build-push-action@v4
        with:
          context: ./server
          push: true
          tags:
            - ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/fullstack-server:${{ github.sha }}

      - name: Build & Push Client Image
        uses: docker/build-push-action@v4
        with:
          context: ./client
          push: true
          tags:
            - ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/fullstack-client:${{ github.sha }}

  terraform:
    name: Terraform Apply
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init & Apply
        working-directory: terraform-aws-infra
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform init -backend-config="bucket=${{ env.TFSTATE_BUCKET }}"
          terraform apply -auto-approve

  helm-release:
    name: Package & Publish Helm Chart
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Helm
        uses: azure/setup-helm@v3

      - name: Package Chart
        run: |
          cd fullstack-app
          helm package . \
            --version 0.1.${{ github.run_number }} \
            --app-version ${{ github.sha }}

      - name: Upload to S3
        run: |
          aws s3 cp fullstack-app-0.1.${{ github.run_number }}.tgz s3://${{ env.CHART_BUCKET }}/
          aws s3 cp index.yaml s3://${{ env.CHART_BUCKET }}/

  argocd-sync:
    name: Trigger Argo CD Sync
    needs: helm-release
    runs-on: ubuntu-latest
    steps:
      - name: Sync via Argo CD
        uses: argoproj/argocd-action@v2
        with:
          argocd_server: ${{ secrets.ARGOCD_SERVER }}
          argocd_token: ${{ secrets.ARGOCD_TOKEN }}
          args: app sync fullstack-app

